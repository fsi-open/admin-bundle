DirectoryIndex app_test.php

SetEnvIf Server_Addr ^10\.0\.0\.200 development=on
SetEnvIf Server_Addr ^172\. development=on
SetEnvIf Server_Addr ^192\.168\. development=on

<IfModule mod_php7.c>
    php_value post_max_size 32M
    php_value upload_max_filesize 32M
</IfModule>

<IfModule mod_rewrite.c>
    RewriteEngine On

    # Determine the RewriteBase automatically and set it as environment variable.
    # If you are using Apache aliases to do mass virtual hosting or installed the
    # project in a subdirectory, the base path will be prepended to allow proper
    # resolution of the app.php file and to redirect to the correct URI. It will
    # work in environments without path prefix as well, providing a safe, one-size
    # fits all solution. But as you do not need it in this case, you can comment
    # the following 2 lines to eliminate the overhead.
    RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$
    RewriteRule ^(.*) - [E=BASE:%1]

    # If the requested filename exists, simply serve it.
    # We only want to let Apache serve files and not directories.
    RewriteCond %{REQUEST_FILENAME} -f
    RewriteRule .? - [L]

    RewriteRule .? %{ENV:BASE}/app_test.php [L]
</IfModule>

<IfModule !mod_rewrite.c>
    <IfModule mod_alias.c>
        # When mod_rewrite is not available, we instruct a temporary redirect of
        # the start page to the front controller explicitly so that the website
        # and the generated links can still be used.
        RedirectMatch 302 ^/$ /app_test.php/
        # RedirectTemp cannot be used instead
    </IfModule>
</IfModule>

<IfModule mod_headers.c>
    Header set Cache-control "no-cache" env=development
    Header unset expires env=development
</IfModule>
