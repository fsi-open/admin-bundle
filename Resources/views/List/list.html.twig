{% extends admin_templates_base %}
{% trans_default_domain 'FSiAdminBundle' %}

{% block themes %}
    {% datasource_route datasource_view element.getRoute() with element.getRouteParameters() %}
    {% datasource_theme datasource_view admin_templates_datasource_theme %}
    {% datagrid_theme datagrid_view admin_templates_datagrid_theme with {'datasource' : datasource_view} %}
{% endblock themes %}

{% block above_content %}
    {{ parent() }}
    {% block filter %}
        {% if datasource_filter_count(datasource_view) > 0 %}
        <div class="row">
            <div class="col-lg-12">
                <form class="form-inline filters" method="GET" action="{{ path(element.route, element.routeParameters) }}">
                    <div class="pull-right hidden-xs filter-buttons">
                        <button type="submit" class="btn btn-primary">{{ 'crud.list.datasource.search'|trans }}</button>
                        <a href="{{ path(element.route, element.routeParameters) }}" class="btn btn-default">{{ 'crud.list.datasource.clear'|trans }}</a>
                    </div>
                    {{ datasource_filter_widget(datasource_view) }}
                    <div class="visible-xs filter-buttons">
                        <button type="submit" class="btn btn-primary">{{ 'crud.list.datasource.search'|trans }}</button>
                        <a href="{{ path(element.route, element.routeParameters) }}" class="btn btn-default">{{ 'crud.list.datasource.clear'|trans }}</a>
                    </div>
                </form>
            </div>
        </div>
        {% endif %}
    {% endblock filter %}
{% endblock above_content %}

{% block content %}
    <h3>
        <span id="page-header">{% block header 'crud.list.title'|trans({}, 'FSiAdminBundle') %}</span>
        <div class="pull-right">
            {% block top_buttons %}
            {% endblock top_buttons %}
        </div>
    </h3>
    {% block datagrid %}
    <div class="table-responsive">
        {{ datagrid_widget(datagrid_view) }}
    </div>
    {% endblock datagrid %}
{% endblock content %}

{% block under_content %}
    <div class="pull-left form-inline datagrid-actions">
    {% block batch_actions %}
        {% if datagrid_view.headers['batch'] is defined %}
            {% for column in datagrid_view.headers %}
                {% if column.type == 'batch' %}
                    {% set batch_form = column.getAttribute('batch_form') %}
                    {% form_theme batch_form admin_templates_form_theme %}
                    {{ form_widget(batch_form.action, {
                        'attr': {
                            'data-datagrid-name': datagrid_view.name
                        }
                    }) }}
                    {{ form_widget(batch_form.submit, {
                        'attr': {
                            'class': 'btn-primary',
                            'data-datagrid-name': datagrid_view.name
                        }
                    }) }}
                    <form class="form hidden" method="POST" data-datagrid-name="{{ datagrid_view.name }}">
                        {% for index in datagrid_view|keys %}
                            <input type="checkbox" class="hidden" value="{{ index }}" name="indexes[]">
                        {% endfor %}
                        {{ form_rest(batch_form) }}
                    </form>
                {% endif %}
            {% endfor %}
        {% endif %}
    {% endblock batch_actions %}
    {% block bottom_buttons '' %}
    </div>
    {% block results %}
    <div id="list-results" class="pull-right">
        <strong>{{ 'crud.list.datagrid.result_count'|trans }} {{ datasource_view|length }}</strong>
        {{ datasource_max_results_widget(datasource_view) }}
    </div>
    {% endblock results %}
    <div class="clearfix"></div>
    {% block pagination %}
    <div class="text-center">
        {{ datasource_pagination_widget(datasource_view, {max_pages: 10}) }}
    </div>
    {% endblock pagination %}
{% endblock under_content %}

{% block javascripts %}
    {{ parent() }}
    <script>
        require(['jquery', 'bootstrap'], function($) {
            var $editable = $('a.editable');
            $editable.click(function(event) {event.preventDefault();});
            $editable.popover({}).on('shown.bs.popover', function () {
                var $popover = $(this);
                $('a.editable-close').click(function(event){
                    event.preventDefault();
                    $popover.popover('hide');
                });
            });
            $('a.editable.has-error').popover('show');

            $('button[data-datagrid-name]').on('click', function(event) {
                var datagrid_name = $(this).data('datagrid-name'),
                        form = $('form[data-datagrid-name=' + datagrid_name + ']'),
                        action = $('select[data-datagrid-name=' + datagrid_name + ']'),
                        checkboxes = $('#' + datagrid_name + ' input.' + datagrid_name + '_batch');

                if (action[0].selectedIndex && checkboxes.length) {
                    form.attr('action', action.val());
                    for (var i = 0; i < checkboxes.length; i++) {
                        form.find('input[type="checkbox"][value="' + $(checkboxes[i]).val() + '"]')
                                .prop('checked', $(checkboxes[i]).prop('checked'));
                    }

                    form.submit();
                }
            });
        });
    </script>
{% endblock javascripts %}
