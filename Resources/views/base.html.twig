<!DOCTYPE html>
<html>
<head>
    <title>{% block head_title %}{{ 'admin.title'|trans({}, 'FSiAdminBundle')  }}{% endblock %}</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    {% block head_meta %}{% endblock %}
    {% block head_css %}
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css" type="text/css" media="all" />
        <style>
            body {position: relative;padding-top: 60px;}
            #batch_action {margin-right: 5px;width: 155px;}
            #batch_form {margin-right: 5px;}
            #filter input[type="text"],
            #filter input[type="email"],
            #filter input[type="datetime"],
            #filter input[type="date"],
            #filter input[type="time"],
            #filter select {width:190px; margin-right:5px;margin-left:5px;margin-bottom:5px;}
            #filter .submit-buttons {float:left; margin-right:5px;margin-left:5px;margin-bottom:5px;}
            #list-results {float:right;}
            #delete-wrapper {text-align: center;}
            #pagination-centered {text-align: center;}
            @media (max-width: 768px) {
                #list-results {margin-top:10px;text-align: center;float:none;}
                #datagrid-wrapper {margin-bottom:20px;}
                #datagrid-wrapper table {margin-bottom:0px;}
                #batch_action {margin-left:5px;}
            }
            .cell-editable {cursor: pointer;}
            .cell-value {display: inline;}
            .sort-asc {margin-right: 5px;}
            .actions > .btn, .editable-buttons > .btn {margin-left:5px;}
        </style>
    {% endblock %}
</head>
<body>
{% block themes %}{% endblock %}
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".admin-navbar-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="{{ path('fsi_admin') }}">{{ 'admin.title'|trans({}, 'FSiAdminBundle')  }}</a>
        </div>
        <div class="collapse navbar-collapse admin-navbar-collapse">
            {% block navigation %}
                {{ knp_menu_render('menu', {'template': '@FSiAdmin/Admin/knp_menu.html.twig', 'currentClass' : 'active'}) }}
                {% if admin_display_language_switch == true %}
                <ul class="nav navbar-nav navbar-right">
                    <li id="language" class="dropdown">
                        <a href="#" class="dropdown-toggle" data-toggle="dropdown">{{ 'admin.language.current'|trans({'%locale%' : app.request.locale}, 'FSiAdminBundle')|raw }} <b class="caret"></b></a>
                        <ul class="dropdown-menu">
                            <li><a href="{{ url('fsi_admin_locale', {'_locale': 'en'}) }}">{{ 'admin.language.english'|trans({}, 'FSiAdminBundle') }}</a></li>
                            <li class="divider"></li>
                            <li><a href="{{ url('fsi_admin_locale', {'_locale' : 'pl'}) }}">{{ 'admin.language.polish'|trans({}, 'FSiAdminBundle') }}</a></li>
                        </ul>
                    </li>
                </ul>
                {% endif %}
            {% endblock %}
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        {% block above_content %}{% endblock above_content %}
        {% block content %}{% endblock content %}
        {% block under_content %}{% endblock under_content %}
    </div>
</div>
{% block javascripts %}
    <script src="//code.jquery.com/jquery-1.9.1.min.js" type="text/javascript"></script>
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.0.2/js/bootstrap.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        (function($) {
            $.fn.formCollection = function(options) {

                options = $.extend({
                    addLabel: '+',
                    addClass: 'btn btn-success collection-add',
                    removeLabel: 'X',
                    removeClass: 'btn btn-danger collection-remove',
                    rowSelector: '.form-group',
                    defaultPrototypeName: '__name__',
                    defaultAllowAdd: true,
                    defaultAllowDelete: true,
                    nestedCollectionsSelector: 'div[data-prototype]'
                }, options);

                var replacePrototypeName = function(template, prototypeName, index) {
                    return template
                        .replace(new RegExp(prototypeName + 'label__', 'gm'), index)
                        .replace(new RegExp(prototypeName, 'gm'), index);
                };

                this.each(function(index, element) {

                    var $el = $(element);
                    var template = $el.data('prototype');
                    var children = $el.children(options.rowSelector);
                    $el.data('current_index', children.length);

                    var prototypeName = $el.data('prototype-name') || options.defaultPrototypeName;
                    var allowAdd = $el.data('allow-add') && options.defaultAllowAdd;
                    var allowDelete = $el.data('allow-delete') && options.defaultAllowDelete;

                    if (allowAdd) {
                        var addBtn = $('<button/>')
                            .text(options.addLabel)
                            .attr('type', 'button')
                            .addClass(options.addClass)
                            .appendTo($el)
                            .on('click', function (event) {
                                var nextIndex = $el.data('current_index');
                                var newRowHtml = replacePrototypeName(template, prototypeName, nextIndex);
                                var newRow = $(newRowHtml).insertBefore(addBtn);

                                //replace prototype in nested collections and init them
                                newRow
                                    .find(options.nestedCollectionsSelector)
                                    .each(function(index, element) {
                                        var $el = $(element);
                                        var template = $el.data('prototype');
                                        $el.data('prototype', replacePrototypeName(template, prototypeName, nextIndex))
                                    })
                                    .formCollection(options);

                                $el.data('current_index', nextIndex + 1);

                                newRow.find('> .col-lg-2').remove();
                                newRow.find('> .col-lg-10')
                                    .removeClass('col-lg-10')
                                    .addClass('col-lg-11')
                                    .after(removeCol.clone(true));

                                event.preventDefault();
                            });
                    }

                    var removeCol = $('<div />').addClass('col-lg-1');
                    var removeBtn = $('<button/>')
                        .text(options.removeLabel)
                        .attr('type', 'button')
                        .addClass(options.removeClass)
                        .appendTo(removeCol)
                        .on('click', function(event) {
                            $(this).closest(options.rowSelector).remove();
                            event.preventDefault();
                        });

                    children.find('> .col-lg-2').remove();
                    var fieldsColumns = children.find('> .col-lg-10').removeClass('col-lg-10').addClass('col-lg-11');

                    if (allowDelete) {
                        fieldsColumns.after(removeCol);
                    }
                });
            }
        })(jQuery);
        $(document).ready(function() {
            $('a.editable').click(function(event) {event.preventDefault();}); 
            $('a.editable').popover({}).on('shown.bs.popover', function () {
                var popover = $(this);
                $('a.editable-close').click(function(event) {
                    event.preventDefault();
                    popover.popover('hide');
                });
            });
            $('a.editable.has-error').popover('show');
            $('div[data-prototype]').formCollection({
                'addLabel': '{{ 'crud.form.collection.add'|trans({}, 'FSiAdminBundle') }}'
            });
        });
    </script>
{% endblock %}
</body>
</html>
